@model DataAccess1.Model.Item

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<h2>@Model.Name-Editace</h2>

@using (Html.BeginForm("Update", "Items", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.ImageName )

    <div class="form-horizontal">
        <h4>Nová položka</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Producer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Producer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Producer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YearProduct, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YearProduct, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YearProduct, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control formatedtext" })
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.DropDownList("categoryId", new SelectList(ViewBag.Categories, "Id", "CategoryName",Model.Category.Id), new { @class = "form-control" })
            </div>
        </div>



        <div class="form-group">
            <label class="col-sm-2 ">Obrázek</label>

            <div>
                <input type="file" name="picture" />
                @if (!string.IsNullOrEmpty(Model.ImageName))
                { 
                <img alt="alt" src="@Url.Content("~/uploads/item/"+Model.ImageName)"/>
                }
            </div>
        </div>

    </div>
    <div class="btn ">
        <button type="submit" class="btn btn-primary btn-lg btn-block">Upravit položku</button>
    </div>
}


<div>
    @Html.ActionLink("Zpět na výpis", "Index")
</div>

<script src="https://cdn.tiny.cloud/1/9wzwytaqxdg3q5ac46z1wm88c8fbkt7mhwmf42delrzs6nn1/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
<script>tinymce.init({ selector: '.formatedtext' });</script>

